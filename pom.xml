<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.vbobot.parent</groupId>
        <artifactId>vbobot-pom-parent</artifactId>
        <version>1.1.0</version>
    </parent>

    <groupId>com.vbobot.sample</groupId>
    <artifactId>seata-sample</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <seata-spring-boot-starter.version>1.4.2</seata-spring-boot-starter.version>
        <spring-cloud-alibaba-seata.version>2.2.0.RELEASE</spring-cloud-alibaba-seata.version>
        <jackson.version>2.12.4</jackson.version>
    </properties>

    <modules>
        <module>seata-at</module>
        <module>seata-tcc-transfer</module>
      <module>seata-tcc-spring-cloud</module>
      <module>seata-common</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.vbobot.common</groupId>
                <artifactId>common-utils</artifactId>
                <version>1.6.0</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/com.alibaba.cloud/spring-cloud-alibaba-seata -->
            <!-- spring-cloud-alibaba-seata使用的seata-spring-boot-starter，没有创建DataSourceProxy的自动装配 -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-seata</artifactId>
                <version>${spring-cloud-alibaba-seata.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.seata</groupId>
                        <artifactId>seata-spring-boot-starter</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-spring-boot-starter</artifactId>
                <version>${seata-spring-boot-starter.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.core</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- jackson
                seata最新版本依赖的jackson，会比springcloud依赖的jackson版本要新，而且用到了一个比较新的API，如果不调整版本，会出现json序列化的错误
            -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <!-- /jackson -->
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>self-repo</id>
            <name>self repo</name>
            <url>http://www.codrim.net/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <build>
<!--        <pluginManagement>-->
<!--            <plugins>-->
<!--                <plugin>-->
<!--                    <groupId>org.springframework.boot</groupId>-->
<!--                    <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--                    <configuration>-->
<!--                        &lt;!&ndash;fork:  如果没有该项配置，devtools不会起作用，即应用不会restart &ndash;&gt;-->
<!--                        <fork>true</fork>-->
<!--                    </configuration>-->
<!--                </plugin>-->
<!--            </plugins>-->
<!--        </pluginManagement>-->
    </build>
</project>
